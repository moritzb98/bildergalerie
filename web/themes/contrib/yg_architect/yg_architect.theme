<?php
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\file\Plugin\Core\Entity\FileInterface;
use \Drupal\Core\Url;

// function yg_medical_preprocess_html(&$variables) {
//     $current_path = \Drupal::service('path.current')->getPath();
//   if ($current_path == 'path/where/block/appears') {
//     $vars['attributes']['class'][] = 'path-pagefront';
//   }
// }


/**
 * Implements hook_preprocess_menu().
 */
function yg_architect_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu__main') { // We're doing that for main menu.
    // Get the current path.
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      // If path is current_path, set active to li.
      if ($item['url']->toString() == $current_path) {
        // Add active link.
        $variables['items'][$key]['attributes']['class'] = 'active';
      }
    }
  }
}



function yg_architect_preprocess_page(&$variables) {

  $variables['basepath'] = $GLOBALS['base_url'];
  $variables['logopath'] = file_url_transform_relative(file_create_url(theme_get_setting('logo.url')));
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
  $variables['twitter'] = theme_get_setting('twitter');
  $variables['facebook'] = theme_get_setting('facebook');  
  $variables['linkedin'] = theme_get_setting('linkedin');
  $variables['dribbble'] = theme_get_setting('dribbble');
}


function yg_architect_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  


 $form['footer_settings']['footer'] = array(
    '#type' => 'details',
    '#title' => t('Theme Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );


  $form ['footer_settings']['footer']['twitter'] = array(
    '#type'          => 'textfield',
    '#title'         => t('twitter'),
    '#default_value' => theme_get_setting('twitter'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

  $form ['footer_settings']['footer']['facebook'] = array(
    '#type'          => 'textfield',
    '#title'         => t('facebook'),
    '#default_value' => theme_get_setting('facebook'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

  $form ['footer_settings']['footer']['linkedin'] = array(
    '#type'          => 'textfield',
    '#title'         => t('linkedin'),
    '#default_value' => theme_get_setting('linkedin'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );


  $form ['footer_settings']['footer']['dribbble'] = array(
    '#type'          => 'textfield',
    '#title'         => t('dribbble'),
    '#default_value' => theme_get_setting('dribbble'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function yg_architect_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Get Request Object.
  $request = \Drupal::request();

  // If there is HTTP Exception..
  if ($exception = $request->attributes->get('exception')) {
    // Get the status code.
    $status_code = $exception->getStatusCode();
    if (in_array($status_code, array(401, 403, 404))) {
      $suggestions[] = 'page__' . $status_code;
    }
  }
}

function yg_architect_theme(&$existing, $type, $theme, $path) {
  $hooks = array();
  $hooks['user_login_form'] = array(
      'render element' => 'form',
      'template' => 'user-login-form',
  );
  return $hooks;
}
?>


